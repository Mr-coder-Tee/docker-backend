version: "5"
services:

  rabbitmq:
    image: rabbitmq:3.12.11-management
    container_name: ${RABIT_MQ_CONTAINER_NAME}
    environment:
      - RABBITMQ_DEFAULT_USER=terrence
      - RABBITMQ_DEFAULT_PASS=123456789
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - local-diskie-net

  localdiskie:
    image: mongo:latest
    container_name: ${MONGO_CONTAINER_NAME}
    ports:
      - 27017:27017
    networks:
      - local-diskie-net
    volumes:
      - mongo-data:/data/db

  postgressDb:
    restart: always
    image: postgres:latest
    container_name: ${CONTAINER_NAME_POSTS}
    build: .
    ports:
      - ${LOCAL_PORTS}:${POSTGRESSDB_PORTS}
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: ${PGDATA}
    volumes:
      - postgress-post-data:/var/lib/postgresql/data
    networks:
      -  local-diskie-net

  postgressDbNotification:
    restart: always
    image: postgres:latest
    container_name: ${CONTAINER_NAME_NOTIF}
    build: .
    ports:
      - ${LOCAL_PORTS_NOTIF}:${POSTGRESSDB_PORTS_NOTIF}
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD_NOTIF}
      POSTGRES_USER: ${POSTGRES_USER_NOTIF}
      POSTGRES_DB: ${POSTGRES_DB_NOTIF}
      PGDATA: ${PGDATA_NOTIF}
    volumes:
      - postgress-notification-data:/var/lib/postgresql/data
    networks:
      -  local-diskie-net

  postgressDbGame:
    restart: always
    image: postgres:latest
    container_name: ${CONTAINER_NAME_GAME}
    build: .
    ports:
      - ${LOCAL_PORTS_GAME}:${POSTGRESSDB_PORTS_GAME}
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD_GAME}
      POSTGRES_USER: ${POSTGRES_USER_GAME}
      POSTGRES_DB: ${POSTGRES_DB_GAME}
      PGDATA: ${PGDATA_GAME}
    volumes:
      - postgress-game-data:/var/lib/postgresql/data
    networks:
      -  local-diskie-net

  configserver:
    image: terrencedroppa/local-diskie-config-server:latest
    restart: unless-stopped
    ports:
      - ${CONFIG_CONTAINER_PORT}:${CONFIG_APP_PORT}
    container_name: ${CONFIG_CONTAINER_NAME}
    environment:
      - ACTIVE_PROFILE=${CONFIG_PROFILE}
      - EXPOSE_PORT=${CONFIG_APP_PORT}
    networks:
      - local-diskie-net
    depends_on:
      - ${RABIT_MQ_CONTAINER_NAME}

  discoveryserver:
    image: terrencedroppa/local-diskie-discovery-server:latest
    restart: unless-stopped
    ports:
      - ${DISCOVER_CONTAINER_PORT}:${DISCOVER_APP_PORT}
    container_name: ${DISCOVER_CONTAINER_NAME}
    environment:
      - ACTIVE_PROFILE=${DISCOVER_PROFILE}
      - EXPOSE_PORT=${DISCOVER_APP_PORT}
    networks:
      - local-diskie-net
    depends_on:
      - configserver

  gatewayapi:
    image: terrencedroppa/local-diskie-api-gateway:latest
    restart: unless-stopped
    ports:
      - ${APIGATEWAY_CONTAINER_PORT}:${APIGATEWAY_APP_PORT}
    container_name: ${APIGATEWAY_CONTAINER_NAME}
    environment:
      - ACTIVE_PROFILE=${APIGATEWAY_PROFILE}
      - EXPOSE_PORT=${APIGATEWAY_APP_PORT}
    networks:
      - local-diskie-net
    depends_on:
      - configserver
      - discoveryserver

  postservice:
    image: terrencedroppa/local-diskie-posts-service:latest
    restart: unless-stopped
    container_name: ${POST_CONTAINER_NAME}
    ports:
      - ${POST_CONTAINER_PORT}:${POST_APP_PORT}
    environment:
      - ACTIVE_PROFILE=${POST_PROFILE}
      - EXPOSE_PORT=${POST_APP_PORT}
    networks:
      - local-diskie-net
    depends_on:
      - configserver
      - discoveryserver
      - postgressDb

  gameservice:
    image: terrencedroppa/local-diskie-games-service:0.0.3
    restart: unless-stopped
    container_name: ${GAME_CONTAINER_NAME}
    ports:
      - ${GAME_CONTAINER_PORT}:${GAME_APP_PORT}
    environment:
      - ACTIVE_PROFILE=${GAME_PROFILE}
      - EXPOSE_PORT=${GAME_APP_PORT}
    networks:
      - local-diskie-net
    depends_on:
      - configserver
      - discoveryserver
      - postgressDbGame

  livegameservice:
    image: terrencedroppa/local-diskie-livegame-service:latest
    restart: unless-stopped
    container_name: ${LIVE_CONTAINER_NAME}
    ports:
      - ${LIVE_CONTAINER_PORT}:${LIVE_APP_PORT}
    environment:
      - ACTIVE_PROFILE=${LIVE_PROFILE}
      - EXPOSE_PORT=${LIVE_APP_PORT}
    networks:
      - local-diskie-net
    depends_on:
      - configserver
      - discoveryserver
      - postgressDbNotification

  
  userservice:
    image: terrencedroppa/local-diskie-user-service:latest
    restart: unless-stopped
    container_name: ${USER_CONTAINER_NAME}
    ports:
      - ${USER_CONTAINER_PORT}:${USER_APP_PORT}
    environment:
      - ACTIVE_PROFILE=${USER_PROFILE}
      - EXPOSE_PORT=${USER_APP_PORT}
    networks:
      - local-diskie-net
    depends_on:
      - configserver
      - discoveryserver
      - localdiskie

  userReactiveservice:
    image: terrencedroppa/local-diskie-user-reactive-service:latest
    restart: unless-stopped
    container_name: ${USER_REACTIVE_CONTAINER_NAME}
    ports:
      - ${USER_REACTIVE_CONTAINER_PORT}:${USER_REACTIVE_APP_PORT}
    environment:
      - ACTIVE_PROFILE=${USER_REACTIVE__PROFILE}
      - EXPOSE_PORT=${USER_REACTIVE_APP_PORT}
    networks:
      - local-diskie-net
    depends_on:
      - configserver
      - discoveryserver
      - localdiskie

  notificationservice:
    image: terrencedroppa/local-diskie-notification-service:latest
    restart: unless-stopped
    container_name: ${NOTIF_CONTAINER_NAME}
    ports:
      - ${NOTIF_CONTAINER_PORT}:${NOTIF_APP_PORT}
    environment:
      - ACTIVE_PROFILE=${NOTIF_PROFILE}
      - EXPOSE_PORT=${NOTIF_APP_PORT}
    networks:
      - local-diskie-net
    depends_on:
      - configserver
      - discoveryserver
      - postgressDbNotification

  uploadservice:
    image: terrencedroppa/local-diskie-upload-service:latest
    restart: unless-stopped
    container_name: ${UPLOAD_CONTAINER_NAME}
    ports:
      - ${UPLOAD_CONTAINER_PORT}:${UPLOAD_APP_PORT}
    environment:
      - ACTIVE_PROFILE=${UPLOAD_PROFILE}
      - EXPOSE_PORT=${UPLOAD_APP_PORT}
    networks:
      - local-diskie-net
    depends_on:
      - configserver
      - discoveryserver

  smsservice:
    image: terrencedroppa/local-diskie-sms-service:latest
    restart: always
    container_name: ${SMS_CONTAINER_NAME}
    ports:
      - ${SMS_CONTAINER_PORT}:${SMS_APP_PORT}
    environment:
      - ACTIVE_PROFILE=${SMS_PROFILE}
      - EXPOSE_PORT=${SMS_APP_PORT}
    networks:
      - local-diskie-net
    depends_on:
      - configserver
      - discoveryserver

  # emailservice:
  #   image: public.ecr.aws/y9a7a6m7/email-service:latest
  #   restart: always
  #   container_name: ${EMAIL_CONTAINER_NAME}
  #   ports:
  #     - ${EMAIL_CONTAINER_PORT}:${EMAIL_CONTAINER_PORT}
  #   networks:
  #     - local-diskie-net
  #   depends_on:
  #     - configserver
  #     - discoveryserver



networks:
  local-diskie-net:
    external: true

volumes:
  mongo-data:
    driver: local
  postgress-data:
  postgress-post-data:
  postgress-notification-data:
  postgress-game-data:

#todo add volume
